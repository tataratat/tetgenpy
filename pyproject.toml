[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "tetgenpy"
authors = [
    {name="Jaewook Lee", email="jaewooklee042@gmail.com"},
]
license = {file = "LICENSE"}
description = "tetgen python wrapper for points, PLCs and tetmesh inputs"
keywords = ["tetgen", "mesh", "3D", "PLC"]
urls = {Homepage = "https://github.com/tataratat/tetgenpy"}
classifiers=[
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
]
dependencies = ["numpy"]
requires-python = '>=3.9'
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.scripts]
tetgen = "tetgenpy:_tetgen"

[tool.scikit-build]
wheel.packages = [
    "tetgenpy",
]

build-dir = "build"

install.strip = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "tetgenpy/_version.py"

[tool.cibuildwheel]
test-command = "python {project}/tests/test_tetgenpy.py"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]

[tool.cibuildwheel.windows]
skip = "pp*"

[tool.ruff]
lint.select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "PL",          # pylint
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "NPY",         # numpy specific rules
  "I",           # isort specific rules
  "UP",          # pyupdate specific rules
  "C400","C401","C402","C403","C404","C405", # additional pyupgrade rules
  "FURB",        # refurb items
  "YTT",         # flake8 check version comparison mistakes
  "A",           # flake8-builtins
]
lint.fixable = ["ALL"]
target-version = "py38"
lint.ignore = [
    "PLR2004", # TODO!
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "B904", # Within an `except` clause, raise exceptions with ...
    "PLR0911", # Too many return statements
]

[tool.black]
line-length = 79
exclude = "third_party"

[tool.blackdoc]
line-length = 75

[tool.codespell]
ignore-words-list = "addin"
